//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AlarmPublisher.PublisherServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="PublisherServiceReference.IAlarmPublisherService")]
    public interface IAlarmPublisherService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAlarmPublisherService/createAlarmPublisher", ReplyAction="http://tempuri.org/IAlarmPublisherService/createAlarmPublisherResponse")]
        void createAlarmPublisher(string pacientName, string condition, string location, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAlarmPublisherService/createAlarmPublisher", ReplyAction="http://tempuri.org/IAlarmPublisherService/createAlarmPublisherResponse")]
        System.Threading.Tasks.Task createAlarmPublisherAsync(string pacientName, string condition, string location, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAlarmPublisherService/updateAlarmPublisher", ReplyAction="http://tempuri.org/IAlarmPublisherService/updateAlarmPublisherResponse")]
        void updateAlarmPublisher(int id, string pacientName, string condition, string location, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAlarmPublisherService/updateAlarmPublisher", ReplyAction="http://tempuri.org/IAlarmPublisherService/updateAlarmPublisherResponse")]
        System.Threading.Tasks.Task updateAlarmPublisherAsync(int id, string pacientName, string condition, string location, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAlarmPublisherService/getAlarmPublisher", ReplyAction="http://tempuri.org/IAlarmPublisherService/getAlarmPublisherResponse")]
        HealthCareWCFServices.AlarmPublisher getAlarmPublisher(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAlarmPublisherService/getAlarmPublisher", ReplyAction="http://tempuri.org/IAlarmPublisherService/getAlarmPublisherResponse")]
        System.Threading.Tasks.Task<HealthCareWCFServices.AlarmPublisher> getAlarmPublisherAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAlarmPublisherService/getAllAlarmPublishers", ReplyAction="http://tempuri.org/IAlarmPublisherService/getAllAlarmPublishersResponse")]
        HealthCareWCFServices.AlarmPublisher[] getAllAlarmPublishers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAlarmPublisherService/getAllAlarmPublishers", ReplyAction="http://tempuri.org/IAlarmPublisherService/getAllAlarmPublishersResponse")]
        System.Threading.Tasks.Task<HealthCareWCFServices.AlarmPublisher[]> getAllAlarmPublishersAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAlarmPublisherServiceChannel : AlarmPublisher.PublisherServiceReference.IAlarmPublisherService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AlarmPublisherServiceClient : System.ServiceModel.ClientBase<AlarmPublisher.PublisherServiceReference.IAlarmPublisherService>, AlarmPublisher.PublisherServiceReference.IAlarmPublisherService {
        
        public AlarmPublisherServiceClient() {
        }
        
        public AlarmPublisherServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AlarmPublisherServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AlarmPublisherServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AlarmPublisherServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void createAlarmPublisher(string pacientName, string condition, string location, string password) {
            base.Channel.createAlarmPublisher(pacientName, condition, location, password);
        }
        
        public System.Threading.Tasks.Task createAlarmPublisherAsync(string pacientName, string condition, string location, string password) {
            return base.Channel.createAlarmPublisherAsync(pacientName, condition, location, password);
        }
        
        public void updateAlarmPublisher(int id, string pacientName, string condition, string location, string password) {
            base.Channel.updateAlarmPublisher(id, pacientName, condition, location, password);
        }
        
        public System.Threading.Tasks.Task updateAlarmPublisherAsync(int id, string pacientName, string condition, string location, string password) {
            return base.Channel.updateAlarmPublisherAsync(id, pacientName, condition, location, password);
        }
        
        public HealthCareWCFServices.AlarmPublisher getAlarmPublisher(int id) {
            return base.Channel.getAlarmPublisher(id);
        }
        
        public System.Threading.Tasks.Task<HealthCareWCFServices.AlarmPublisher> getAlarmPublisherAsync(int id) {
            return base.Channel.getAlarmPublisherAsync(id);
        }
        
        public HealthCareWCFServices.AlarmPublisher[] getAllAlarmPublishers() {
            return base.Channel.getAllAlarmPublishers();
        }
        
        public System.Threading.Tasks.Task<HealthCareWCFServices.AlarmPublisher[]> getAllAlarmPublishersAsync() {
            return base.Channel.getAllAlarmPublishersAsync();
        }
    }
}
